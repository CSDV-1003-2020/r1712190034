#include<Iostream>
using namespace std;
struct node{
struct node *lchild;
int data;
struct node *rchild;
}
*root=NULL;
void Insert(int key) 
{ 
  struct Node *t =root;
  struct Node *r =NULL,*p;
  if(root =NULL)
  {
    p=(struct Node = (malloc(size of (struct Node));
    p-> data =key;
    p->lchild=p->chlid= NULL;
    root= p;
    return;
   }
 while(t!=NULL)
 {
    r=t;
    if(key <(t->data))
    {
      t=p->lchild;
      }
      else if(key>t->data)
      {
      t=t->rchild;
      }
      else
      return;
   }
    p=(struct Node *)malloc(sizeof(struct Node));  
    p->data=key;   
    p->lchild=p->rchild=NULL;    
    if(key<r->data)
    r->lchild=p;    
    else r->rchild=p; 
   }
   void Inorder(struct Node *p)
   {
    if(p)
    {
      Inorder (p->lchild)
      cout<<p->data<<"Inorder;
      inorder (p->rchild)
     }
    }
    struct node *search(int key)
    {
    struct node *t=root;
    while(t!=NULL)
    {
    if(key==t->data)
    {
    return t;
    }
    else if(key<t->data)
    {
t=t->lchild;
}
else
{
t=t->rchild;
}
    
  
  
